{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/language/json/workerManager.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/languageFeatures.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/tokenization.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/jsonMode.js"],"names":["Position","Range","Location","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","Promise","monaco","WorkerManager","defaults","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","label","languageId","createData","languageSettings","diagnosticsOptions","getProxy","getLanguageServiceWorker","p","completeCallback","errorCallback","r","resources","_i","arguments","length","then","client","_","withSyncedResources","c","e","create","line","character","is","value","candidate","Is","defined","number","one","two","three","four","start","end","Error","uri","range","string","undefined","Warning","Information","Hint","message","severity","code","source","result","title","command","args","replace","newText","insert","position","del","textDocument","edits","VersionedTextDocumentIdentifier","Array","isArray","TextDocumentIdentifier","TextDocumentItem","MarkupKind","CompletionItemKind","InsertTextFormat","CompletionItem","CompletionList","MarkedString","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolInformation","CodeActionContext","CodeLens","FormattingOptions","TextEditChangeImpl","push","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","Object","_workspaceEdit","documentChanges","forEach","textDocumentEdit","textEditChange","changes","keys","key","defineProperty","get","enumerable","configurable","getTextEditChange","version","text","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","items","isIncomplete","fromPlainText","plainText","documentation","parameters","Read","Write","kind","Namespace","Package","String","Number","Boolean","Key","Null","name","containerName","location","diagnostics","typedArray","data","tabSize","insertSpaces","boolean","DocumentLink","target","TextDocument","TextDocumentSaveReason","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","left","slice","right","leftIdx","rightIdx","i","ret","a","b","lastModifiedOffset","startOffset","endOffset","substring","Manual","AfterDelay","FocusOut","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","toString","call","check","every","Uri","languageFeatures_Range","DiagnosticsAdapter","_disposables","_listener","onModelAdd","model","handle","modeId","getModeId","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","_resetSchema","onDidChangeModelLanguage","getModels","d","resource","worker","resetSchema","doValidation","markers","map","diag","lsSeverity","MarkerSeverity","Info","toSeverity","startLineNumber","startColumn","endLineNumber","endColumn","getModel","err","console","error","fromPosition","column","lineNumber","fromRange","toRange","toCompletionItemKind","mItemKind","languages","toTextEdit","textEdit","languageFeatures_CompletionAdapter","CompletionAdapter","provideCompletionItems","token","getWordUntilPosition","wireCancellationToken","doComplete","info","entry","item","insertText","sortText","filterText","detail","insertTextFormat","toMarkdownString","thing","language","HoverAdapter","provideHover","doHover","contents","toMarkedStringArray","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","mKind","toSymbolKind","parse","fromFormattingOptions","options","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","DocumentColorAdapter","provideDocumentColors","findDocumentColors","infos","color","provideColorPresentations","getColorPresentations","presentations","presentation","additionalTextEdits","promise","cancel","onCancellationRequested","createScanner","ignoreTrivia","pos","len","tokenOffset","scanError","scanHexDigits","count","exact","digits","charCodeAt","scanNext","isWhiteSpace","fromCharCode","isLineBreak","ch_1","scanString","commentClosed","isDigit","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","main_createScanner","createTokenizationSupport","supportComments","getInitialState","JSONState","tokenize","state","offsetDelta","stopAtOffset","comments","numberOfInsertedCharacters","adjustOffset","scanner","lastWasColon","tokens","endState","clone","type","substr","TOKEN_DELIM_OBJECT","TOKEN_DELIM_ARRAY","TOKEN_DELIM_COLON","TOKEN_DELIM_COMMA","TOKEN_VALUE_BOOLEAN","TOKEN_VALUE_NULL","TOKEN_VALUE_STRING","TOKEN_PROPERTY_NAME","TOKEN_VALUE_NUMBER","TOKEN_COMMENT_LINE","TOKEN_COMMENT_BLOCK","getStateData","startIndex","scopes","_state","equals","other","setStateData","setupMode","disposables","uris","apply","registerCompletionItemProvider","registerHoverProvider","registerDocumentSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","setTokensProvider","setLanguageConfiguration","richEditConfiguration","registerColorProvider","__webpack_require__","__webpack_exports__","wordPattern","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn"],"mappings":"kGAKA,ICIAA,EAwBAC,EA2BAC,EAuBAC,EAuBAC,EAqCAC,EA8BAC,EAiCAC,EDzMAC,EAAAC,OAAAD,QAEAE,EAAA,WACA,SAAAA,EAAAC,GACA,IAAAC,EAAAC,KACAA,KAAAC,UAAAH,EACAE,KAAAE,QAAA,KACAF,KAAAG,mBAAAC,YAAA,WAA2D,OAAAL,EAAAM,gBAA+B,KAC1FL,KAAAM,cAAA,EACAN,KAAAO,sBAAAP,KAAAC,UAAAO,YAAA,WAA6E,OAAAT,EAAAU,gBAqD7E,OAnDAZ,EAAAa,UAAAD,YAAA,WACAT,KAAAE,UACAF,KAAAE,QAAAS,UACAX,KAAAE,QAAA,MAEAF,KAAAY,QAAA,MAEAf,EAAAa,UAAAC,QAAA,WACAE,cAAAb,KAAAG,oBACAH,KAAAO,sBAAAI,UACAX,KAAAS,eAEAZ,EAAAa,UAAAL,aAAA,WACAL,KAAAE,UAGAY,KAAAC,MAAAf,KAAAM,cA1BA,MA4BAN,KAAAS,gBAGAZ,EAAAa,UAAAM,WAAA,WAeA,OAdAhB,KAAAM,cAAAQ,KAAAC,MACAf,KAAAY,UACAZ,KAAAE,QAAAN,OAAAqB,OAAAC,iBAEAC,SAAA,8BACAC,MAAApB,KAAAC,UAAAoB,WAEAC,YACAC,iBAAAvB,KAAAC,UAAAuB,mBACAH,WAAArB,KAAAC,UAAAoB,cAGArB,KAAAY,QAAAZ,KAAAE,QAAAuB,YAEAzB,KAAAY,SAEAf,EAAAa,UAAAgB,yBAAA,WAGA,IAFA,IAKAd,EAUAe,EACAC,EACAC,EACAC,EAlBA/B,EAAAC,KACA+B,KACAC,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/CD,EAAAC,GAAAC,UAAAD,GAGA,OASAL,EATA3B,KAAAgB,aAAAmB,KAAA,SAAAC,GACAxB,EAAAwB,IACSD,KAAA,SAAAE,GACT,OAAAtC,EAAAG,QAAAoC,oBAAAP,KACSI,KAAA,SAAAE,GAAqB,OAAAzB,IAQ9BkB,EAAA,IAAAnC,EAAA,SAAA4C,EAAAC,GACAZ,EAAAW,EACAV,EAAAW,GACK,cACLb,EAAAQ,KAAAP,EAAAC,GACAC,GAXAjC,EA5DA,ICGA,SAAAV,GASAA,EAAAsD,OAHA,SAAAC,EAAAC,GACA,OAAgBD,OAAAC,cAUhBxD,EAAAyD,GAJA,SAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAC,QAAAF,IAAAC,EAAAE,OAAAH,EAAAJ,OAAAK,EAAAE,OAAAH,EAAAH,YAfA,CAkBCxD,WAMD,SAAAC,GAYAA,EAAAqD,OAXA,SAAAS,EAAAC,EAAAC,EAAAC,GACA,GAAAN,EAAAE,OAAAC,IAAAH,EAAAE,OAAAE,IAAAJ,EAAAE,OAAAG,IAAAL,EAAAE,OAAAI,GACA,OAAoBC,MAAAnE,EAAAsD,OAAAS,EAAAC,GAAAI,IAAApE,EAAAsD,OAAAW,EAAAC,IAEpB,GAAAlE,EAAAyD,GAAAM,IAAA/D,EAAAyD,GAAAO,GACA,OAAoBG,MAAAJ,EAAAK,IAAAJ,GAGpB,UAAAK,MAAA,8CAAAN,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,MAWAjE,EAAAwD,GAJA,SAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAC,QAAAF,IAAA3D,EAAAyD,GAAAE,EAAAQ,QAAAnE,EAAAyD,GAAAE,EAAAS,MAlBA,CAqBCnE,WAMD,SAAAC,GASAA,EAAAoD,OAHA,SAAAgB,EAAAC,GACA,OAAgBD,MAAAC,UAUhBrE,EAAAuD,GAJA,SAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAC,QAAAF,IAAA1D,EAAAwD,GAAAE,EAAAY,SAAAX,EAAAY,OAAAb,EAAAW,MAAAV,EAAAa,UAAAd,EAAAW,OAfA,CAkBCpE,WAKD,SAAAC,GAIAA,EAAAkE,MAAA,EAIAlE,EAAAuE,QAAA,EAIAvE,EAAAwE,YAAA,EAIAxE,EAAAyE,KAAA,EAhBA,CAiBCzE,WAMD,SAAAC,GAiBAA,EAAAkD,OAbA,SAAAiB,EAAAM,EAAAC,EAAAC,EAAAC,GACA,IAAAC,GAAsBV,QAAAM,WAUtB,OATAjB,EAAAC,QAAAiB,KACAG,EAAAH,YAEAlB,EAAAC,QAAAkB,KACAE,EAAAF,QAEAnB,EAAAC,QAAAmB,KACAC,EAAAD,UAEAC,GAeA7E,EAAAqD,GATA,SAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAC,QAAAF,IACA1D,EAAAwD,GAAAE,EAAAY,QACAX,EAAAY,OAAAb,EAAAkB,WACAjB,EAAAE,OAAAH,EAAAmB,WAAAlB,EAAAa,UAAAd,EAAAmB,aACAlB,EAAAE,OAAAH,EAAAoB,OAAAnB,EAAAY,OAAAb,EAAAoB,OAAAnB,EAAAa,UAAAd,EAAAoB,SACAnB,EAAAY,OAAAb,EAAAqB,SAAApB,EAAAa,UAAAd,EAAAqB,UA5BA,CA+BC5E,WAMD,SAAAC,GAeAA,EAAAiD,OAXA,SAAA4B,EAAAC,GAEA,IADA,IAAAC,KACAvC,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/CuC,EAAAvC,EAAA,GAAAC,UAAAD,GAEA,IAAAoC,GAAsBC,QAAAC,WAItB,OAHAvB,EAAAC,QAAAuB,MAAArC,OAAA,IACAkC,EAAAnC,UAAAsC,GAEAH,GAUA5E,EAAAoD,GAJA,SAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAC,QAAAF,IAAAC,EAAAY,OAAAb,EAAAuB,QAAAtB,EAAAY,OAAAb,EAAAuB,QArBA,CAwBC7E,WAMD,SAAAC,GASAA,EAAA+E,QAHA,SAAAd,EAAAe,GACA,OAAgBf,QAAAe,YAWhBhF,EAAAiF,OAHA,SAAAC,EAAAF,GACA,OAAgBf,OAASJ,MAAAqB,EAAApB,IAAAoB,GAAiCF,YAU1DhF,EAAAmF,IAHA,SAAAlB,GACA,OAAgBA,QAAAe,QAAA,KAxBhB,CA2BChF,WAMD,SAAAC,GAOAA,EAAA+C,OAHA,SAAAoC,EAAAC,GACA,OAAgBD,eAAAC,UAShBpF,EAAAkD,GANA,SAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAC,QAAAF,IACAiC,EAAAnC,GAAAE,EAAA+B,eACAG,MAAAC,QAAAnC,EAAAgC,QAZA,CAeCpF,WACD,IA4GAwF,EAuBAH,EAwBAI,EA6BAC,EAcAC,EAgCAC,EAsBAC,EAeAC,EAaAC,EAgBAC,EAkBAC,EAwBAC,EAmBAC,EAkBAC,EA6BAC,EA4BAC,EAsBAC,EAyBAC,EA/dAC,EAAA,WACA,SAAAA,EAAArB,GACA9E,KAAA8E,QAoBA,OAlBAqB,EAAAzF,UAAAgE,OAAA,SAAAC,EAAAF,GACAzE,KAAA8E,MAAAsB,KAAA3G,EAAAiF,OAAAC,EAAAF,KAEA0B,EAAAzF,UAAA8D,QAAA,SAAAd,EAAAe,GACAzE,KAAA8E,MAAAsB,KAAA3G,EAAA+E,QAAAd,EAAAe,KAEA0B,EAAAzF,UAAA2F,OAAA,SAAA3C,GACA1D,KAAA8E,MAAAsB,KAAA3G,EAAAmF,IAAAlB,KAEAyC,EAAAzF,UAAA4F,IAAA,SAAAC,GACAvG,KAAA8E,MAAAsB,KAAAG,IAEAJ,EAAAzF,UAAA8F,IAAA,WACA,OAAAxG,KAAA8E,OAEAqB,EAAAzF,UAAA+F,MAAA,WACAzG,KAAA8E,MAAA4B,OAAA,EAAA1G,KAAA8E,MAAA5C,SAEAiE,EAtBA,IA2BA,WACA,SAAAQ,EAAAC,GACA,IAAA7G,EAAAC,KACAA,KAAA6G,iBAAAC,OAAArE,OAAA,MACAmE,IACA5G,KAAA+G,eAAAH,EACAA,EAAAI,gBACAJ,EAAAI,gBAAAC,QAAA,SAAAC,GACA,IAAAC,EAAA,IAAAhB,EAAAe,EAAApC,OACA/E,EAAA8G,iBAAAK,EAAArC,aAAApB,KAAA0D,IAGAP,EAAAQ,SACAN,OAAAO,KAAAT,EAAAQ,SAAAH,QAAA,SAAAK,GACA,IAAAH,EAAA,IAAAhB,EAAAS,EAAAQ,QAAAE,IACAvH,EAAA8G,iBAAAS,GAAAH,KAKAL,OAAAS,eAAAZ,EAAAjG,UAAA,QAKA8G,IAAA,WACA,OAAAxH,KAAA+G,gBAEAU,YAAA,EACAC,cAAA,IAEAf,EAAAjG,UAAAiH,kBAAA,SAAAL,GACA,GAAAvC,EAAAnC,GAAA0E,GAAA,CAMA,GALAtH,KAAA+G,iBACA/G,KAAA+G,gBACAC,sBAGAhH,KAAA+G,eAAAC,gBACA,UAAAxD,MAAA,oEAEA,IAAAqB,EAAAyC,EAEA,KADAlD,EAAApE,KAAA6G,iBAAAhC,EAAApB,MACA,CACA,IACAyD,GACArC,eACAC,MAHAA,MAKA9E,KAAA+G,eAAAC,gBAAAZ,KAAAc,GACA9C,EAAA,IAAA+B,EAAArB,GACA9E,KAAA6G,iBAAAhC,EAAApB,KAAAW,EAEA,OAAAA,EAQA,GALApE,KAAA+G,iBACA/G,KAAA+G,gBACAK,QAAAN,OAAArE,OAAA,SAGAzC,KAAA+G,eAAAK,QACA,UAAA5D,MAAA,kEAEA,IAAAY,EACA,KADAA,EAAApE,KAAA6G,iBAAAS,IACA,CACA,IAAAxC,KACA9E,KAAA+G,eAAAK,QAAAE,GAAAxC,EACAV,EAAA,IAAA+B,EAAArB,GACA9E,KAAA6G,iBAAAS,GAAAlD,EAEA,OAAAA,GAvEA,IAkFA,SAAAc,GAQAA,EAAAzC,OAHA,SAAAgB,GACA,OAAgBA,QAUhByB,EAAAtC,GAJA,SAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAC,QAAAF,IAAAC,EAAAY,OAAAb,EAAAW,MAdA,CAiBCyB,WAMD,SAAAH,GASAA,EAAAtC,OAHA,SAAAgB,EAAAmE,GACA,OAAgBnE,MAAAmE,YAUhB7C,EAAAnC,GAJA,SAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAC,QAAAF,IAAAC,EAAAY,OAAAb,EAAAW,MAAAV,EAAAE,OAAAH,EAAA8E,UAfA,CAkBC7C,WAMD,SAAAI,GAWAA,EAAA1C,OAHA,SAAAgB,EAAApC,EAAAuG,EAAAC,GACA,OAAgBpE,MAAApC,aAAAuG,UAAAC,SAUhB1C,EAAAvC,GAJA,SAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAC,QAAAF,IAAAC,EAAAY,OAAAb,EAAAW,MAAAV,EAAAY,OAAAb,EAAAzB,aAAA0B,EAAAE,OAAAH,EAAA8E,UAAA7E,EAAAY,OAAAb,EAAA+E,OAjBA,CAoBC1C,WASD,SAAAC,GAIAA,EAAA0C,UAAA,YAIA1C,EAAA2C,SAAA,WARA,CASC3C,WAKD,SAAAC,GACAA,EAAA2C,KAAA,EACA3C,EAAA4C,OAAA,EACA5C,EAAA6C,SAAA,EACA7C,EAAA8C,YAAA,EACA9C,EAAA+C,MAAA,EACA/C,EAAAgD,SAAA,EACAhD,EAAAiD,MAAA,EACAjD,EAAAkD,UAAA,EACAlD,EAAAmD,OAAA,EACAnD,EAAAoD,SAAA,GACApD,EAAAqD,KAAA,GACArD,EAAAsD,MAAA,GACAtD,EAAAuD,KAAA,GACAvD,EAAAwD,QAAA,GACAxD,EAAAyD,QAAA,GACAzD,EAAA0D,MAAA,GACA1D,EAAA2D,KAAA,GACA3D,EAAA4D,UAAA,GACA5D,EAAA6D,OAAA,GACA7D,EAAA8D,WAAA,GACA9D,EAAA+D,SAAA,GACA/D,EAAAgE,OAAA,GACAhE,EAAAiE,MAAA,GACAjE,EAAAkE,SAAA,GACAlE,EAAAmE,cAAA,GAzBA,CA0BCnE,WAMD,SAAAC,GAIAA,EAAAwC,UAAA,EAWAxC,EAAAwD,QAAA,EAfA,CAgBCxD,WAMD,SAAAC,GAQAA,EAAA9C,OAHA,SAAArB,GACA,OAAgBA,UANhB,CASCmE,WAMD,SAAAC,GAUAA,EAAA/C,OAHA,SAAAgH,EAAAC,GACA,OAAgBD,YAAAC,mBARhB,CAWClE,WAED,SAAAC,GASAA,EAAAkE,cAHA,SAAAC,GACA,OAAAA,EAAApF,QAAA,wBAA0C,SAP1C,CAUCiB,WAMD,SAAAC,GAUAA,EAAAjD,OAHA,SAAArB,EAAAyI,GACA,OAAAA,GAAgCzI,QAAAyI,kBAAiDzI,UARjF,CAYCsE,WAMD,SAAAC,GAkBAA,EAAAlD,OAjBA,SAAArB,EAAAyI,GAEA,IADA,IAAAC,KACA9H,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/C8H,EAAA9H,EAAA,GAAAC,UAAAD,GAEA,IAAAoC,GAAsBhD,SAUtB,OATA2B,EAAAC,QAAA6G,KACAzF,EAAAyF,iBAEA9G,EAAAC,QAAA8G,GACA1F,EAAA0F,aAGA1F,EAAA0F,cAEA1F,GAhBA,CAmBCuB,WAKD,SAAAC,GAIAA,EAAAoC,KAAA,EAIApC,EAAAmE,KAAA,EAIAnE,EAAAoE,MAAA,EAZA,CAaCpE,WAMD,SAAAC,GAYAA,EAAApD,OAPA,SAAAiB,EAAAuG,GACA,IAAA7F,GAAsBV,SAItB,OAHAX,EAAAE,OAAAgH,KACA7F,EAAA6F,QAEA7F,GAVA,CAaCyB,WAKD,SAAAC,GACAA,EAAAkD,KAAA,EACAlD,EAAA0C,OAAA,EACA1C,EAAAoE,UAAA,EACApE,EAAAqE,QAAA,EACArE,EAAAwC,MAAA,EACAxC,EAAAmC,OAAA,EACAnC,EAAA2C,SAAA,EACA3C,EAAAsC,MAAA,EACAtC,EAAAqC,YAAA,EACArC,EAAA8C,KAAA,GACA9C,EAAAyC,UAAA,GACAzC,EAAAoC,SAAA,GACApC,EAAAuC,SAAA,GACAvC,EAAAsD,SAAA,GACAtD,EAAAsE,OAAA,GACAtE,EAAAuE,OAAA,GACAvE,EAAAwE,QAAA,GACAxE,EAAAd,MAAA,GACAc,EAAAgB,OAAA,GACAhB,EAAAyE,IAAA,GACAzE,EAAA0E,KAAA,GACA1E,EAAAqD,WAAA,GACArD,EAAAuD,OAAA,GACAvD,EAAAwD,MAAA,GACAxD,EAAAyD,SAAA,GACAzD,EAAA0D,cAAA,GA1BA,CA2BC1D,WAED,SAAAC,GAqBAA,EAAAtD,OAXA,SAAAgI,EAAAR,EAAAvG,EAAAD,EAAAiH,GACA,IAAAtG,GACAqG,OACAR,OACAU,UAAuBlH,MAAAC,UAKvB,OAHAgH,IACAtG,EAAAsG,iBAEAtG,GAnBA,CAsBC2B,WAMD,SAAAC,GAOAA,EAAAvD,OAHA,SAAAmI,GACA,OAAgBA,gBAUhB5E,EAAApD,GAJA,SAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAC,QAAAF,IAAAC,EAAA8H,WAAA/H,EAAA8H,YAAArL,EAAAqD,KAbA,CAgBCoD,WAMD,SAAAC,GAUAA,EAAAxD,OANA,SAAAiB,EAAAoH,GACA,IAAA1G,GAAsBV,SAGtB,OAFAX,EAAAC,QAAA8H,KACA1G,EAAA0G,QACA1G,GAUA6B,EAAArD,GAJA,SAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAC,QAAAF,IAAA1D,EAAAwD,GAAAE,EAAAY,SAAAX,EAAAa,UAAAd,EAAAwB,UAAA9E,EAAAoD,GAAAE,EAAAwB,WAhBA,CAmBC2B,WAMD,SAAAC,GAOAA,EAAAzD,OAHA,SAAAsI,EAAAC,GACA,OAAgBD,UAAAC,iBAUhB9E,EAAAtD,GAJA,SAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAC,QAAAF,IAAAC,EAAAE,OAAAH,EAAAiI,UAAAhI,EAAAkI,QAAAnI,EAAAkI,eAbA,CAgBC9E,WAKD,IAAAgF,EAAA,WAGA,OAFA,aADA,IAUA,SAAAA,GAOAA,EAAAzI,OAHA,SAAAiB,EAAAyH,GACA,OAAgBzH,QAAAyH,WAUhBD,EAAAtI,GAJA,SAAAC,GACA,IAAAC,EAAAD,EACA,OAAAE,EAAAC,QAAAF,IAAA1D,EAAAwD,GAAAE,EAAAY,SAAAX,EAAAa,UAAAd,EAAAqI,SAAApI,EAAAY,OAAAb,EAAAqI,UAbA,CAgBCD,WACD,IACAE,EAkFAC,GAjFA,SAAAD,GAUAA,EAAA3I,OAHA,SAAAgB,EAAApC,EAAAuG,EAAA0D,GACA,WAAAC,EAAA9H,EAAApC,EAAAuG,EAAA0D,IAWAF,EAAAxI,GALA,SAAAC,GACA,IAAAC,EAAAD,EACA,SAAAE,EAAAC,QAAAF,IAAAC,EAAAY,OAAAb,EAAAW,OAAAV,EAAAa,UAAAd,EAAAzB,aAAA0B,EAAAY,OAAAb,EAAAzB,cAAA0B,EAAAE,OAAAH,EAAA0I,YACAzI,EAAA0I,KAAA3I,EAAA4I,UAAA3I,EAAA0I,KAAA3I,EAAA6I,aAAA5I,EAAA0I,KAAA3I,EAAA8I,YA2BAR,EAAAS,WAxBA,SAAAC,EAAAhH,GAUA,IATA,IAAA+C,EAAAiE,EAAAJ,UACAK,EAuBA,SAAAC,EAAAlB,EAAAmB,GACA,GAAAnB,EAAA5I,QAAA,EAEA,OAAA4I,EAEA,IAAAnJ,EAAAmJ,EAAA5I,OAAA,IACAgK,EAAApB,EAAAqB,MAAA,EAAAxK,GACAyK,EAAAtB,EAAAqB,MAAAxK,GACAqK,EAAAE,EAAAD,GACAD,EAAAI,EAAAH,GAIA,IAHA,IAAAI,EAAA,EACAC,EAAA,EACAC,EAAA,EACAF,EAAAH,EAAAhK,QAAAoK,EAAAF,EAAAlK,QAAA,CACA,IAAAsK,EAAAP,EAAAC,EAAAG,GAAAD,EAAAE,IAGAxB,EAAAyB,KAFAC,GAAA,EAEAN,EAAAG,KAIAD,EAAAE,KAGA,KAAAD,EAAAH,EAAAhK,QACA4I,EAAAyB,KAAAL,EAAAG,KAEA,KAAAC,EAAAF,EAAAlK,QACA4I,EAAAyB,KAAAH,EAAAE,KAEA,OAAAxB,EArDAkB,CAAAlH,EAAA,SAAA2H,EAAAC,GAEA,UADAD,EAAA/I,MAAAJ,MAAAZ,KAAAgK,EAAAhJ,MAAAJ,MAAAZ,KAEA+J,EAAA/I,MAAAJ,MAAAX,UAAA+J,EAAAhJ,MAAAJ,MAAAX,UAEA,IAEAgK,EAAA9E,EAAA3F,OACAqK,EAAAR,EAAA7J,OAAA,EAA4CqK,GAAA,EAAQA,IAAA,CACpD,IAAA/J,EAAAuJ,EAAAQ,GACAK,EAAAd,EAAAF,SAAApJ,EAAAkB,MAAAJ,OACAuJ,EAAAf,EAAAF,SAAApJ,EAAAkB,MAAAH,KACA,KAAAsJ,GAAAF,GAIA,UAAAnJ,MAAA,mBAHAqE,IAAAiF,UAAA,EAAAF,GAAApK,EAAAiC,QAAAoD,EAAAiF,UAAAD,EAAAhF,EAAA3F,QAKAyK,EAAAC,EAEA,OAAA/E,GA1CA,CA6ECuD,WAKD,SAAAC,GAKAA,EAAA0B,OAAA,EAIA1B,EAAA2B,WAAA,EAIA3B,EAAA4B,SAAA,EAbA,CAcC5B,WACD,IA2GAtI,EA3GAwI,EAAA,WACA,SAAAA,EAAA9H,EAAApC,EAAAuG,EAAA0D,GACAtL,KAAAkN,KAAAzJ,EACAzD,KAAAmN,YAAA9L,EACArB,KAAAoN,SAAAxF,EACA5H,KAAAqN,SAAA/B,EACAtL,KAAAsN,aAAA,KAmGA,OAjGAxG,OAAAS,eAAAgE,EAAA7K,UAAA,OACA8G,IAAA,WACA,OAAAxH,KAAAkN,MAEAzF,YAAA,EACAC,cAAA,IAEAZ,OAAAS,eAAAgE,EAAA7K,UAAA,cACA8G,IAAA,WACA,OAAAxH,KAAAmN,aAEA1F,YAAA,EACAC,cAAA,IAEAZ,OAAAS,eAAAgE,EAAA7K,UAAA,WACA8G,IAAA,WACA,OAAAxH,KAAAoN,UAEA3F,YAAA,EACAC,cAAA,IAEA6D,EAAA7K,UAAAgL,QAAA,SAAAhI,GACA,GAAAA,EAAA,CACA,IAAAJ,EAAAtD,KAAA4L,SAAAlI,EAAAJ,OACAC,EAAAvD,KAAA4L,SAAAlI,EAAAH,KACA,OAAAvD,KAAAqN,SAAAP,UAAAxJ,EAAAC,GAEA,OAAAvD,KAAAqN,UAEA9B,EAAA7K,UAAA6M,OAAA,SAAAC,EAAA5F,GACA5H,KAAAqN,SAAAG,EAAA3F,KACA7H,KAAAoN,SAAAxF,EACA5H,KAAAsN,aAAA,MAEA/B,EAAA7K,UAAA+M,eAAA,WACA,UAAAzN,KAAAsN,aAAA,CAIA,IAHA,IAAAI,KACA7F,EAAA7H,KAAAqN,SACAM,GAAA,EACApB,EAAA,EAA2BA,EAAA1E,EAAA3F,OAAiBqK,IAAA,CAC5CoB,IACAD,EAAAtH,KAAAmG,GACAoB,GAAA,GAEA,IAAAC,EAAA/F,EAAAgG,OAAAtB,GACAoB,EAAA,OAAAC,GAAA,OAAAA,EACA,OAAAA,GAAArB,EAAA,EAAA1E,EAAA3F,QAAA,OAAA2F,EAAAgG,OAAAtB,EAAA,IACAA,IAGAoB,GAAA9F,EAAA3F,OAAA,GACAwL,EAAAtH,KAAAyB,EAAA3F,QAEAlC,KAAAsN,aAAAI,EAEA,OAAA1N,KAAAsN,cAEA/B,EAAA7K,UAAAiL,WAAA,SAAAmC,GACAA,EAAAC,KAAAC,IAAAD,KAAAE,IAAAH,EAAA9N,KAAAqN,SAAAnL,QAAA,GACA,IAAAwL,EAAA1N,KAAAyN,iBACAS,EAAA,EAAAC,EAAAT,EAAAxL,OACA,OAAAiM,EACA,OAAAhP,EAAAsD,OAAA,EAAAqL,GAEA,KAAAI,EAAAC,GAAA,CACA,IAAAC,EAAAL,KAAAM,OAAAH,EAAAC,GAAA,GACAT,EAAAU,GAAAN,EACAK,EAAAC,EAGAF,EAAAE,EAAA,EAKA,IAAA1L,EAAAwL,EAAA,EACA,OAAA/O,EAAAsD,OAAAC,EAAAoL,EAAAJ,EAAAhL,KAEA6I,EAAA7K,UAAAkL,SAAA,SAAAjH,GACA,IAAA+I,EAAA1N,KAAAyN,iBACA,GAAA9I,EAAAjC,MAAAgL,EAAAxL,OACA,OAAAlC,KAAAqN,SAAAnL,OAEA,GAAAyC,EAAAjC,KAAA,EACA,SAEA,IAAA4L,EAAAZ,EAAA/I,EAAAjC,MACA6L,EAAA5J,EAAAjC,KAAA,EAAAgL,EAAAxL,OAAAwL,EAAA/I,EAAAjC,KAAA,GAAA1C,KAAAqN,SAAAnL,OACA,OAAA6L,KAAAC,IAAAD,KAAAE,IAAAK,EAAA3J,EAAAhC,UAAA4L,GAAAD,IAEAxH,OAAAS,eAAAgE,EAAA7K,UAAA,aACA8G,IAAA,WACA,OAAAxH,KAAAyN,iBAAAvL,QAEAuF,YAAA,EACAC,cAAA,IAEA6D,EAzGA,IA4GA,SAAAxI,GACA,IAAAyL,EAAA1H,OAAApG,UAAA8N,SAIAzL,EAAAC,QAHA,SAAAH,GACA,gBAAAA,GAMAE,EAAAa,UAHA,SAAAf,GACA,gBAAAA,GAMAE,EAAAkI,QAHA,SAAApI,GACA,WAAAA,IAAA,IAAAA,GAMAE,EAAAY,OAHA,SAAAd,GACA,0BAAA2L,EAAAC,KAAA5L,IAMAE,EAAAE,OAHA,SAAAJ,GACA,0BAAA2L,EAAAC,KAAA5L,IAMAE,EAAA0I,KAHA,SAAA5I,GACA,4BAAA2L,EAAAC,KAAA5L,IAMAE,EAAA8H,WAHA,SAAAhI,EAAA6L,GACA,OAAA1J,MAAAC,QAAApC,MAAA8L,MAAAD,IA3BA,CA8BC3L,WCt9BD,IAAA6L,EAAAhP,OAAAgP,IACAC,EAAAjP,OAAAR,MAEA0P,EAAA,WACA,SAAAA,EAAA3B,EAAAjN,EAAAJ,GACA,IAAAC,EAAAC,KACAA,KAAAmN,cACAnN,KAAAE,UACAF,KAAA+O,gBACA/O,KAAAgP,UAAAlI,OAAArE,OAAA,MACA,IAAAwM,EAAA,SAAAC,GACA,IAIAC,EAJAC,EAAAF,EAAAG,YACAD,IAAArP,EAAAoN,cAIApN,EAAAiP,UAAAE,EAAAzL,IAAA+K,YAAAU,EAAAI,mBAAA,WACAC,aAAAJ,GACAA,EAAAK,WAAA,WAAiD,OAAAzP,EAAA0P,YAAAP,EAAAzL,IAAA2L,IAA+C,OAEhGrP,EAAA0P,YAAAP,EAAAzL,IAAA2L,KAEAM,EAAA,SAAAR,GACAtP,OAAAqB,OAAA0O,gBAAAT,EAAAnP,EAAAoN,gBACA,IAAAyC,EAAAV,EAAAzL,IAAA+K,WACAqB,EAAA9P,EAAAiP,UAAAY,GACAC,IACAA,EAAAlP,iBACAZ,EAAAiP,UAAAY,KAGA5P,KAAA+O,aAAA3I,KAAAxG,OAAAqB,OAAA6O,iBAAAb,IACAjP,KAAA+O,aAAA3I,KAAAxG,OAAAqB,OAAA8O,mBAAA,SAAAb,GACAQ,EAAAR,GACAnP,EAAAiQ,aAAAd,EAAAzL,QAEAzD,KAAA+O,aAAA3I,KAAAxG,OAAAqB,OAAAgP,yBAAA,SAAAzC,GACAkC,EAAAlC,EAAA0B,OACAD,EAAAzB,EAAA0B,OACAnP,EAAAiQ,aAAAxC,EAAA0B,MAAAzL,QAEAzD,KAAA+O,aAAA3I,KAAAtG,EAAAU,YAAA,SAAA6B,GACAzC,OAAAqB,OAAAiP,YAAAjJ,QAAA,SAAAiI,GACAA,EAAAG,cAAAtP,EAAAoN,cACAuC,EAAAR,GACAD,EAAAC,SAIAlP,KAAA+O,aAAA3I,MACAzF,QAAA,WAEA,QAAA2G,KADA1H,OAAAqB,OAAAiP,YAAAjJ,QAAAyI,GACA3P,EAAAiP,UACAjP,EAAAiP,UAAA1H,GAAA3G,aAIAf,OAAAqB,OAAAiP,YAAAjJ,QAAAgI,GAwBA,OAtBAH,EAAApO,UAAAC,QAAA,WACAX,KAAA+O,aAAA9H,QAAA,SAAAkJ,GAAgD,OAAAA,KAAAxP,YAChDX,KAAA+O,iBAEAD,EAAApO,UAAAsP,aAAA,SAAAI,GACApQ,KAAAE,UAAAiC,KAAA,SAAAkO,GACAA,EAAAC,YAAAF,EAAA5B,eAGAM,EAAApO,UAAA+O,YAAA,SAAAW,EAAA/O,GACArB,KAAAE,QAAAkQ,GAAAjO,KAAA,SAAAkO,GACA,OAAAA,EAAAE,aAAAH,EAAA5B,YAAArM,KAAA,SAAAyI,GACA,IAAA4F,EAAA5F,EAAA6F,IAAA,SAAAN,GAA4D,OAwB5DjM,EAAA,iBADAwM,EAvB4DP,GAwB5DjM,KAAAkG,OAAAsG,EAAAxM,MAAAwM,EAAAxM,MAEAD,SAbA,SAAA0M,GACA,OAAAA,GACA,KAAArR,EAAAkE,MAAA,OAAA5D,OAAAgR,eAAApN,MACA,KAAAlE,EAAAuE,QAAA,OAAAjE,OAAAgR,eAAA/M,QACA,KAAAvE,EAAAwE,YAAA,OAAAlE,OAAAgR,eAAAC,KACA,KAAAvR,EAAAyE,KAAA,OAAAnE,OAAAgR,eAAA7M,KACA,QACA,OAAAnE,OAAAgR,eAAAC,MAMAC,CAAAJ,EAAAzM,UACA8M,gBAAAL,EAAAhN,MAAAJ,MAAAZ,KAAA,EACAsO,YAAAN,EAAAhN,MAAAJ,MAAAX,UAAA,EACAsO,cAAAP,EAAAhN,MAAAH,IAAAb,KAAA,EACAwO,UAAAR,EAAAhN,MAAAH,IAAAZ,UAAA,EACAqB,QAAA0M,EAAA1M,QACAE,OACAC,OAAAuM,EAAAvM,QAVA,IAAAuM,EACAxM,IAvBAgL,EAAAtP,OAAAqB,OAAAkQ,SAAAf,GACAlB,EAAAG,cAAAhO,GACAzB,OAAAqB,OAAA0O,gBAAAT,EAAA7N,EAAAmP,OAGSrO,UAAAyB,EAAA,SAAAwN,GACTC,QAAAC,MAAAF,MAGAtC,EA9EA,GAyGA,SAAAyC,EAAA5M,GACA,GAAAA,EAGA,OAAYhC,UAAAgC,EAAA6M,OAAA,EAAA9O,KAAAiC,EAAA8M,WAAA,GAEZ,SAAAC,EAAAhO,GACA,GAAAA,EAGA,OAAYJ,OAASZ,KAAAgB,EAAAqN,gBAAA,EAAApO,UAAAe,EAAAsN,YAAA,GAAoEzN,KAAQb,KAAAgB,EAAAuN,cAAA,EAAAtO,UAAAe,EAAAwN,UAAA,IAEjG,SAAAS,EAAAjO,GACA,GAAAA,EAGA,WAAAmL,EAAAnL,EAAAJ,MAAAZ,KAAA,EAAAgB,EAAAJ,MAAAX,UAAA,EAAAe,EAAAH,IAAAb,KAAA,EAAAgB,EAAAH,IAAAZ,UAAA,GAEA,SAAAiP,EAAA3H,GACA,IAAA4H,EAAAjS,OAAAkS,UAAAzM,mBACA,OAAA4E,GACA,KAAA5E,EAAA2C,KAAA,OAAA6J,EAAA7J,KACA,KAAA3C,EAAA4C,OAAA,OAAA4J,EAAA5J,OACA,KAAA5C,EAAA6C,SAAA,OAAA2J,EAAA3J,SACA,KAAA7C,EAAA8C,YAAA,OAAA0J,EAAA1J,YACA,KAAA9C,EAAA+C,MAAA,OAAAyJ,EAAAzJ,MACA,KAAA/C,EAAAgD,SAAA,OAAAwJ,EAAAxJ,SACA,KAAAhD,EAAAiD,MAAA,OAAAuJ,EAAAvJ,MACA,KAAAjD,EAAAkD,UAAA,OAAAsJ,EAAAtJ,UACA,KAAAlD,EAAAmD,OAAA,OAAAqJ,EAAArJ,OACA,KAAAnD,EAAAoD,SAAA,OAAAoJ,EAAApJ,SACA,KAAApD,EAAAqD,KAAA,OAAAmJ,EAAAnJ,KACA,KAAArD,EAAAsD,MAAA,OAAAkJ,EAAAlJ,MACA,KAAAtD,EAAAuD,KAAA,OAAAiJ,EAAAjJ,KACA,KAAAvD,EAAAwD,QAAA,OAAAgJ,EAAAhJ,QACA,KAAAxD,EAAAyD,QAAA,OAAA+I,EAAA/I,QACA,KAAAzD,EAAA0D,MAAA,OAAA8I,EAAA9I,MACA,KAAA1D,EAAA2D,KAAA,OAAA6I,EAAA7I,KACA,KAAA3D,EAAA4D,UAAA,OAAA4I,EAAA5I,UAEA,OAAA4I,EAAApJ,SA0BA,SAAAsJ,EAAAC,GACA,GAAAA,EAGA,OACAtO,MAAAiO,EAAAK,EAAAtO,OACAmE,KAAAmK,EAAAvN,SA4CA,IAAAwN,EAAA,WACA,SAAAC,EAAAhS,GACAF,KAAAE,UA2CA,OAzCA4G,OAAAS,eAAA2K,EAAAxR,UAAA,qBACA8G,IAAA,WACA,iBAEAC,YAAA,EACAC,cAAA,IAEAwK,EAAAxR,UAAAyR,uBAAA,SAAAjD,EAAAvK,EAAAyN,GACAlD,EAAAmD,qBAAA1N,GAAA,IACAyL,EAAAlB,EAAAzL,IACA,OAAA6O,EAAAF,EAAApS,KAAAE,QAAAkQ,GAAAjO,KAAA,SAAAkO,GACA,OAAAA,EAAAkC,WAAAnC,EAAA5B,WAAA+C,EAAA5M,MACSxC,KAAA,SAAAqQ,GACT,GAAAA,EAAA,CAGA,IAAA/I,EAAA+I,EAAA/I,MAAAgH,IAAA,SAAAgC,GACA,IAAAC,GACAtR,MAAAqR,EAAArR,MACAuR,WAAAF,EAAAE,WACAC,SAAAH,EAAAG,SACAC,WAAAJ,EAAAI,WACAhJ,cAAA4I,EAAA5I,cACAiJ,OAAAL,EAAAK,OACA7I,KAAA2H,EAAAa,EAAAxI,OASA,OAPAwI,EAAAT,WACAU,EAAAhP,MAAAiO,EAAAc,EAAAT,SAAAtO,OACAgP,EAAAC,WAAAF,EAAAT,SAAAvN,SAEAgO,EAAAM,mBAAAzN,EAAAwD,UACA4J,EAAAC,YAAuC9P,MAAA6P,EAAAC,aAEvCD,IAEA,OACAhJ,aAAA8I,EAAA9I,aACAD,cAIAyI,EA7CA,GAmDA,SAAAc,EAAAP,GACA,uBAAAA,GAEA5P,MAAA4P,IANAQ,EASAR,IARA,iBAAAQ,GAAA,iBAAAA,EAAAhJ,KASA,cAAAwI,EAAAxI,MAEApH,MAAA4P,EAAA5P,MAAA2B,QAAA,wBAAoD,UAIpD3B,MAAA4P,EAAA5P,QAGYA,MAAA,MAAA4P,EAAAS,SAAA,KAAAT,EAAA5P,MAAA,WAnBZ,IAAAoQ,EA+BA,IAAAE,EAAA,WACA,SAAAA,EAAAjT,GACAF,KAAAE,UAgBA,OAdAiT,EAAAzS,UAAA0S,aAAA,SAAAlE,EAAAvK,EAAAyN,GACA,IAAAhC,EAAAlB,EAAAzL,IACA,OAAA6O,EAAAF,EAAApS,KAAAE,QAAAkQ,GAAAjO,KAAA,SAAAkO,GACA,OAAAA,EAAAgD,QAAAjD,EAAA5B,WAAA+C,EAAA5M,MACSxC,KAAA,SAAAqQ,GACT,GAAAA,EAGA,OACA9O,MAAAiO,EAAAa,EAAA9O,OACA4P,SAxBA,SAAAA,GACA,GAAAA,EAGA,OAAAtO,MAAAC,QAAAqO,GACAA,EAAA7C,IAAAuC,IAEAA,EAAAM,IAiBAC,CAAAf,EAAAc,eAIAH,EAlBA,GAqDA,IAAAK,EAAA,WACA,SAAAA,EAAAtT,GACAF,KAAAE,UAgBA,OAdAsT,EAAA9S,UAAA+S,uBAAA,SAAAvE,EAAAkD,GACA,IAAAhC,EAAAlB,EAAAzL,IACA,OAAA6O,EAAAF,EAAApS,KAAAE,QAAAkQ,GAAAjO,KAAA,SAAAkO,GAA2F,OAAAA,EAAAqD,oBAAAtD,EAAA5B,cAA0DrM,KAAA,SAAAsH,GACrJ,GAAAA,EAGA,OAAAA,EAAAgH,IAAA,SAAAiC,GAA8C,OAC9CjI,KAAAiI,EAAAjI,KACAC,cAAAgI,EAAAhI,cACAT,KArCA,SAAAA,GACA,IAAA0J,EAAA/T,OAAAkS,UAAAhM,WACA,OAAAmE,GACA,KAAAnE,EAAAkD,KAAA,OAAA2K,EAAA3O,MACA,KAAAc,EAAA0C,OAAA,OAAAmL,EAAAnL,OACA,KAAA1C,EAAAoE,UAAA,OAAAyJ,EAAAzJ,UACA,KAAApE,EAAAqE,QAAA,OAAAwJ,EAAAxJ,QACA,KAAArE,EAAAwC,MAAA,OAAAqL,EAAArL,MACA,KAAAxC,EAAAmC,OAAA,OAAA0L,EAAA1L,OACA,KAAAnC,EAAA2C,SAAA,OAAAkL,EAAAlL,SACA,KAAA3C,EAAAsC,MAAA,OAAAuL,EAAAvL,MACA,KAAAtC,EAAAqC,YAAA,OAAAwL,EAAAxL,YACA,KAAArC,EAAA8C,KAAA,OAAA+K,EAAA/K,KACA,KAAA9C,EAAAyC,UAAA,OAAAoL,EAAApL,UACA,KAAAzC,EAAAoC,SAAA,OAAAyL,EAAAzL,SACA,KAAApC,EAAAuC,SAAA,OAAAsL,EAAAtL,SACA,KAAAvC,EAAAsD,SAAA,OAAAuK,EAAAvK,SACA,KAAAtD,EAAAsE,OAAA,OAAAuJ,EAAAvJ,OACA,KAAAtE,EAAAuE,OAAA,OAAAsJ,EAAAtJ,OACA,KAAAvE,EAAAwE,QAAA,OAAAqJ,EAAArJ,QACA,KAAAxE,EAAAd,MAAA,OAAA2O,EAAA3O,MAEA,OAAA2O,EAAAzL,SAeA0L,CAAAlB,EAAAzI,MACAU,UA7CAA,EA6CA+H,EAAA/H,UA3CAlH,IAAAmL,EAAAiF,MAAAlJ,EAAAlH,KACAC,MAAAiO,EAAAhH,EAAAjH,UAHA,IAAAiH,QAiDA6I,EAlBA,GAqBA,SAAAM,EAAAC,GACA,OACAhJ,QAAAgJ,EAAAhJ,QACAC,aAAA+I,EAAA/I,cAGA,IAAAgJ,EAAA,WACA,SAAAA,EAAA9T,GACAF,KAAAE,UAaA,OAXA8T,EAAAtT,UAAAuT,+BAAA,SAAA/E,EAAA6E,EAAA3B,GACA,IAAAhC,EAAAlB,EAAAzL,IACA,OAAA6O,EAAAF,EAAApS,KAAAE,QAAAkQ,GAAAjO,KAAA,SAAAkO,GACA,OAAAA,EAAA6D,OAAA9D,EAAA5B,WAAA,KAAAsF,EAAAC,IAAA5R,KAAA,SAAA2C,GACA,GAAAA,GAAA,IAAAA,EAAA5C,OAGA,OAAA4C,EAAA2L,IAAAsB,SAIAiC,EAfA,GAkBAG,EAAA,WACA,SAAAA,EAAAjU,GACAF,KAAAE,UAaA,OAXAiU,EAAAzT,UAAA0T,oCAAA,SAAAlF,EAAAxL,EAAAqQ,EAAA3B,GACA,IAAAhC,EAAAlB,EAAAzL,IACA,OAAA6O,EAAAF,EAAApS,KAAAE,QAAAkQ,GAAAjO,KAAA,SAAAkO,GACA,OAAAA,EAAA6D,OAAA9D,EAAA5B,WAAAkD,EAAAhO,GAAAoQ,EAAAC,IAAA5R,KAAA,SAAA2C,GACA,GAAAA,GAAA,IAAAA,EAAA5C,OAGA,OAAA4C,EAAA2L,IAAAsB,SAIAoC,EAfA,GAkBAE,EAAA,WACA,SAAAA,EAAAnU,GACAF,KAAAE,UAkCA,OAhCAmU,EAAA3T,UAAA4T,sBAAA,SAAApF,EAAAkD,GACA,IAAAhC,EAAAlB,EAAAzL,IACA,OAAA6O,EAAAF,EAAApS,KAAAE,QAAAkQ,GAAAjO,KAAA,SAAAkO,GAA2F,OAAAA,EAAAkE,mBAAAnE,EAAA5B,cAAyDrM,KAAA,SAAAqS,GACpJ,GAAAA,EAGA,OAAAA,EAAA/D,IAAA,SAAAiC,GAA8C,OAC9C+B,MAAA/B,EAAA+B,MACA/Q,MAAAiO,EAAAe,EAAAhP,cAIA2Q,EAAA3T,UAAAgU,0BAAA,SAAAxF,EAAAsD,EAAAJ,GACA,IAAAhC,EAAAlB,EAAAzL,IACA,OAAA6O,EAAAF,EAAApS,KAAAE,QAAAkQ,GAAAjO,KAAA,SAAAkO,GAA2F,OAAAA,EAAAsE,sBAAAvE,EAAA5B,WAAAgE,EAAAiC,MAAA/C,EAAAc,EAAA9O,UAA+FvB,KAAA,SAAAyS,GAC1L,GAAAA,EAGA,OAAAA,EAAAnE,IAAA,SAAAoE,GACA,IAAAnC,GACAtR,MAAAyT,EAAAzT,OAQA,OANAyT,EAAA7C,WACAU,EAAAV,SAAAD,EAAA8C,EAAA7C,WAEA6C,EAAAC,sBACApC,EAAAoC,oBAAAD,EAAAC,oBAAArE,IAAAsB,IAEAW,QAIA2B,EApCA,GA0CA,SAAA/B,EAAAF,EAAA2C,GAIA,OAHAA,EAAAC,QACA5C,EAAA6C,wBAAA,WAAmD,OAAAF,EAAAC,WAEnDD,EC9cA,SAAAG,GAAArN,EAAAsN,QACA,IAAAA,IAAkCA,GAAA,GAClC,IAAAC,EAAA,EAAAC,EAAAxN,EAAA3F,OAAAW,EAAA,GAAAyS,EAAA,EAAAlD,EAAA,GAAAmD,EAAA,EACA,SAAAC,EAAAC,EAAAC,GAGA,IAFA,IAAAC,EAAA,EACA9S,EAAA,EACA8S,EAAAF,IAAAC,GAAA,CACA,IAAA9H,EAAA/F,EAAA+N,WAAAR,GACA,GAAAxH,GAAA,IAAAA,GAAA,GACA/K,EAAA,GAAAA,EAAA+K,EAAA,QAEA,GAAAA,GAAA,IAAAA,GAAA,GACA/K,EAAA,GAAAA,EAAA+K,EAAA,UAEA,MAAAA,GAAA,IAAAA,GAAA,KAIA,MAHA/K,EAAA,GAAAA,EAAA+K,EAAA,MAKAwH,IACAO,IAKA,OAHAA,EAAAF,IACA5S,GAAA,GAEAA,EAiIA,SAAAgT,IAIA,GAHAhT,EAAA,GACA0S,EAAA,EACAD,EAAAF,EACAA,GAAAC,EAGA,OADAC,EAAAD,EACAjD,EAAA,GAEA,IAAAlO,EAAA2D,EAAA+N,WAAAR,GAEA,GAAAU,GAAA5R,GAAA,CACA,GACAkR,IACAvS,GAAAuH,OAAA2L,aAAA7R,GACAA,EAAA2D,EAAA+N,WAAAR,SACaU,GAAA5R,IACb,OAAAkO,EAAA,GAGA,GAAA4D,GAAA9R,GAOA,OANAkR,IACAvS,GAAAuH,OAAA2L,aAAA7R,GACA,KAAAA,GAAA,KAAA2D,EAAA+N,WAAAR,KACAA,IACAvS,GAAA,MAEAuP,EAAA,GAEA,OAAAlO,GAEA,SAEA,OADAkR,IACAhD,EAAA,EACA,SAEA,OADAgD,IACAhD,EAAA,EACA,QAEA,OADAgD,IACAhD,EAAA,EACA,QAEA,OADAgD,IACAhD,EAAA,EACA,QAEA,OADAgD,IACAhD,EAAA,EACA,QAEA,OADAgD,IACAhD,EAAA,EAEA,QAGA,OAFAgD,IACAvS,EAjIA,WAEA,IADA,IAAAuB,EAAA,GAAAd,EAAA8R,IACA,CACA,GAAAA,GAAAC,EAAA,CACAjR,GAAAyD,EAAAiF,UAAAxJ,EAAA8R,GACAG,EAAA,EACA,MAEA,IAAA3H,EAAA/F,EAAA+N,WAAAR,GACA,QAAAxH,EAAA,CACAxJ,GAAAyD,EAAAiF,UAAAxJ,EAAA8R,GACAA,IACA,MAEA,QAAAxH,EAAA,CAgDA,GAAAA,GAAA,GAAAA,GAAA,IACA,GAAAoI,GAAApI,GAAA,CACAxJ,GAAAyD,EAAAiF,UAAAxJ,EAAA8R,GACAG,EAAA,EACA,MAGAA,EAAA,EAIAH,QA3DA,CAGA,GAFAhR,GAAAyD,EAAAiF,UAAAxJ,EAAA8R,KACAA,GACAC,EAAA,CACAE,EAAA,EACA,MAGA,OADA3H,EAAA/F,EAAA+N,WAAAR,MAEA,QACAhR,GAAA,IACA,MACA,QACAA,GAAA,KACA,MACA,QACAA,GAAA,IACA,MACA,QACAA,GAAA,KACA,MACA,SACAA,GAAA,KACA,MACA,SACAA,GAAA,KACA,MACA,SACAA,GAAA,KACA,MACA,SACAA,GAAA,KACA,MACA,SACA,IAAA6R,EAAAT,EAAA,MACAS,GAAA,EACA7R,GAAAgG,OAAA2L,aAAAE,GAGAV,EAAA,EAEA,MACA,QACAA,EAAA,EAEAjS,EAAA8R,GAgBA,OAAAhR,EAsDA8R,GACA9D,EAAA,GAEA,QACA,IAAA9O,EAAA8R,EAAA,EAEA,QAAAvN,EAAA+N,WAAAR,EAAA,IAEA,IADAA,GAAA,EACAA,EAAAC,IACAW,GAAAnO,EAAA+N,WAAAR,KAGAA,IAGA,OADAvS,EAAAgF,EAAAiF,UAAAxJ,EAAA8R,GACAhD,EAAA,GAGA,QAAAvK,EAAA+N,WAAAR,EAAA,IACAA,GAAA,EAEA,IADA,IAAAe,GAAA,EACAf,EAAAC,GAAA,CAEA,QADAxN,EAAA+N,WAAAR,IACAA,EAAA,EAAAC,GAAA,KAAAxN,EAAA+N,WAAAR,EAAA,IACAA,GAAA,EACAe,GAAA,EACA,MAEAf,IAOA,OALAe,IACAf,IACAG,EAAA,GAEA1S,EAAAgF,EAAAiF,UAAAxJ,EAAA8R,GACAhD,EAAA,GAKA,OAFAvP,GAAAuH,OAAA2L,aAAA7R,GACAkR,IACAhD,EAAA,GAEA,QAGA,GAFAvP,GAAAuH,OAAA2L,aAAA7R,KACAkR,IACAC,IAAAe,GAAAvO,EAAA+N,WAAAR,IACA,OAAAhD,EAAA,GAKA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QAEA,OADAvP,GAzOA,WACA,IAAAS,EAAA8R,EACA,QAAAvN,EAAA+N,WAAAR,GACAA,SAIA,IADAA,IACAA,EAAAvN,EAAA3F,QAAAkU,GAAAvO,EAAA+N,WAAAR,KACAA,IAGA,GAAAA,EAAAvN,EAAA3F,QAAA,KAAA2F,EAAA+N,WAAAR,GAAA,CAEA,OADAA,EACAvN,EAAA3F,QAAAkU,GAAAvO,EAAA+N,WAAAR,KAQA,OADAG,EAAA,EACA1N,EAAAiF,UAAAxJ,EAAA8R,GANA,IADAA,IACAA,EAAAvN,EAAA3F,QAAAkU,GAAAvO,EAAA+N,WAAAR,KACAA,IAQA,IAAA7R,EAAA6R,EACA,GAAAA,EAAAvN,EAAA3F,SAAA,KAAA2F,EAAA+N,WAAAR,IAAA,MAAAvN,EAAA+N,WAAAR,IAKA,MAJAA,EACAvN,EAAA3F,QAAA,KAAA2F,EAAA+N,WAAAR,IAAA,KAAAvN,EAAA+N,WAAAR,KACAA,IAEAA,EAAAvN,EAAA3F,QAAAkU,GAAAvO,EAAA+N,WAAAR,IAAA,CAEA,IADAA,IACAA,EAAAvN,EAAA3F,QAAAkU,GAAAvO,EAAA+N,WAAAR,KACAA,IAEA7R,EAAA6R,OAGAG,EAAA,EAGA,OAAA1N,EAAAiF,UAAAxJ,EAAAC,GAgMA8S,GACAjE,EAAA,GAEA,QAEA,KAAAgD,EAAAC,GAAAiB,EAAApS,IACAkR,IACAlR,EAAA2D,EAAA+N,WAAAR,GAEA,GAAAE,IAAAF,EAAA,CAGA,OAFAvS,EAAAgF,EAAAiF,UAAAwI,EAAAF,IAGA,kBAAAhD,EAAA,EACA,mBAAAA,EAAA,EACA,kBAAAA,EAAA,EAEA,OAAAA,EAAA,GAKA,OAFAvP,GAAAuH,OAAA2L,aAAA7R,GACAkR,IACAhD,EAAA,IAGA,SAAAkE,EAAApS,GACA,GAAA4R,GAAA5R,IAAA8R,GAAA9R,GACA,SAEA,OAAAA,GACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,SAEA,SASA,OACAqS,YAjSA,SAAAC,GACApB,EAAAoB,EACA3T,EAAA,GACAyS,EAAA,EACAlD,EAAA,GACAmD,EAAA,GA6RAkB,YAAA,WAAkC,OAAArB,GAClCsB,KAAAvB,EAVA,WACA,IAAA/Q,EACA,GACAA,EAAAyR,UACSzR,GAAA,IAAAA,GAAA,IACT,OAAAA,GAKAyR,EACAc,SAAA,WAA+B,OAAAvE,GAC/BwE,cAAA,WAAoC,OAAA/T,GACpCgU,eAAA,WAAqC,OAAAvB,GACrCwB,eAAA,WAAqC,OAAA1B,EAAAE,GACrCyB,cAAA,WAAoC,OAAAxB,IAGpC,SAAAO,GAAAlI,GACA,YAAAA,GAAA,IAAAA,GAAA,KAAAA,GAAA,KAAAA,GACA,MAAAA,GAAA,OAAAA,MAAA,MAAAA,GAAA,MACA,OAAAA,GAAA,OAAAA,GAAA,QAAAA,GAAA,QAAAA,EAEA,SAAAoI,GAAApI,GACA,YAAAA,GAAA,KAAAA,GAAA,OAAAA,GAAA,OAAAA,EAEA,SAAAwI,GAAAxI,GACA,OAAAA,GAAA,IAAAA,GAAA,GC5UA,IAAAoJ,GAAA9B,GCPA,SAAA+B,GAAAC,GACA,OACAC,gBAAA,WAAsC,WAAAC,GAAA,eACtCC,SAAA,SAAA3U,EAAA4U,EAAAC,EAAAC,GAAqE,OAyCrE,SAAAC,EAAA/U,EAAA4U,EAAAC,EAAAC,QACA,IAAAD,IAAiCA,EAAA,GAEjC,IAAAG,EAAA,EAAAC,GAAA,EACA,OAAAL,EAAA/B,WACA,OACA7S,EAAA,IAAAA,EACAgV,EAAA,EACA,MACA,OACAhV,EAAA,KAAAA,EACAgV,EAAA,EAGA,IAAAzN,EAAAuC,EAAAoL,EAAAZ,GAAAtU,GAAAmV,EAAAP,EAAAO,aACArL,GACAsL,UACAC,SAAAT,EAAAU,SAEA,QACA,IAAAlK,EAAAyJ,EAAAK,EAAAnB,cAAAwB,EAAA,GAEA,SADAhO,EAAA2N,EAAAlB,QAEA,MAGA,GAAA5I,IAAAyJ,EAAAK,EAAAnB,cACA,UAAAjT,MAAA,mDAAAd,EAAAwV,OAAAN,EAAAnB,cAAA,IASA,OALAkB,IACA7J,GAAA4J,GAEAC,EAAAD,EAAA,EAEAzN,GACA,OAIA,OACAgO,EAAAE,GACAN,GAAA,EACA,MACA,OAIA,OACAI,EAAAG,GACAP,GAAA,EACA,MACA,OACAI,EAAAI,GACAR,GAAA,EACA,MACA,OACAI,EAAAK,GACAT,GAAA,EACA,MACA,OACA,OACAI,EAAAM,GACAV,GAAA,EACA,MACA,OACAI,EAAAO,GACAX,GAAA,EACA,MACA,QACAI,EAAAJ,EAAAY,GAAAC,GACAb,GAAA,EACA,MACA,QACAI,EAAAU,GACAd,GAAA,EAIA,GAAAJ,EACA,OAAAxN,GACA,QACAgO,EAAAW,GACA,MACA,QACAX,EAAAY,GAIArM,EAAAuL,SAAA,IAAAX,GAAAE,EAAAwB,eAAAlB,EAAAb,gBAAAc,GACArL,EAAAsL,OAAA1R,MACA2S,WAAAjL,EACAkL,OAAAf,IAGA,OAAAzL,EAzIqE6K,CAAAH,EAAAxU,EAAA4U,EAAAC,KAGrE,IAAAY,GAAA,yBACAC,GAAA,uBACAC,GAAA,uBACAC,GAAA,uBACAC,GAAA,eACAC,GAAA,eACAC,GAAA,oBACAE,GAAA,cACAD,GAAA,kBACAG,GAAA,qBACAD,GAAA,oBACAxB,GAAA,WACA,SAAAA,EAAAE,EAAA/B,EAAAsC,GACA7X,KAAAiZ,OAAA3B,EACAtX,KAAAuV,YACAvV,KAAA6X,eAqBA,OAnBAT,EAAA1W,UAAAsX,MAAA,WACA,WAAAZ,EAAApX,KAAAiZ,OAAAjZ,KAAAuV,UAAAvV,KAAA6X,eAEAT,EAAA1W,UAAAwY,OAAA,SAAAC,GACA,OAAAA,IAAAnZ,SAGAmZ,gBAAA/B,KAGApX,KAAAuV,YAAA4D,EAAA5D,WACAvV,KAAA6X,eAAAsB,EAAAtB,eAEAT,EAAA1W,UAAAoY,aAAA,WACA,OAAA9Y,KAAAiZ,QAEA7B,EAAA1W,UAAA0Y,aAAA,SAAA9B,GACAtX,KAAAiZ,OAAA3B,GAEAF,EAzBA,GCfA,SAAAiC,GAAAvZ,GACA,IAAAwZ,KACAlX,EAAA,IAAAvC,EAAAC,GACAwZ,EAAAlT,KAAAhE,GACA,IAAAiO,EAAA,WAEA,IADA,IAAAkJ,KACAvX,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/CuX,EAAAvX,GAAAC,UAAAD,GAEA,OAAAI,EAAAV,yBAAA8X,MAAApX,EAAAmX,IAEAlY,EAAAvB,EAAAuB,WACAiY,EAAAlT,KAAAxG,OAAAkS,UAAA2H,+BAAApY,EAAA,IAAA4Q,EAAA5B,KACAiJ,EAAAlT,KAAAxG,OAAAkS,UAAA4H,sBAAArY,EAAA,IAAA8R,EAAA9C,KACAiJ,EAAAlT,KAAAxG,OAAAkS,UAAA6H,+BAAAtY,EAAA,IAAAmS,EAAAnD,KACAiJ,EAAAlT,KAAAxG,OAAAkS,UAAA8H,uCAAAvY,EAAA,IAAA2S,EAAA3D,KACAiJ,EAAAlT,KAAAxG,OAAAkS,UAAA+H,4CAAAxY,EAAA,IAAA8S,EAAA9D,KACAiJ,EAAAlT,KAAA,IAAA0I,EAAAzN,EAAAgP,EAAAvQ,IACAwZ,EAAAlT,KAAAxG,OAAAkS,UAAAgI,kBAAAzY,EAAA4V,IAAA,KACAqC,EAAAlT,KAAAxG,OAAAkS,UAAAiI,yBAAA1Y,EAAA2Y,KACAV,EAAAlT,KAAAxG,OAAAkS,UAAAmI,sBAAA5Y,EAAA,IAAAgT,EAAAhE,KA5BA6J,EAAA/J,EAAAgK,EAAA,8BAAAd,KA8BA,IAAAW,IACAI,YAAA,yCACA3C,UACA4C,YAAA,KACAC,cAAA,YAEAC,WACA,IAAW,MACX,UAEAC,mBACSC,KAAA,IAASC,MAAA,IAAYC,OAAA,YACrBF,KAAA,IAAAC,MAAA,IAAAC,OAAA,YACAF,KAAA,IAAAC,MAAA,IAAAC,OAAA","file":"41.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `JSONWorker` instance\n                moduleId: 'vs/language/json/jsonWorker',\n                label: this._defaults.languageId,\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.diagnosticsOptions,\n                    languageId: this._defaults.languageId\n                }\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The diagnostic's serverity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.title);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n})(TextEdit || (TextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits) {\n        this.edits = edits;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\n        this.edits.push(TextEdit.insert(position, newText));\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\n        this.edits.push(TextEdit.replace(range, newText));\n    };\n    TextEditChangeImpl.prototype.delete = function (range) {\n        this.edits.push(TextEdit.del(range));\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            return this._workspaceEdit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (VersionedTextDocumentIdentifier.is(key)) {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    documentChanges: []\n                };\n            }\n            if (!this._workspaceEdit.documentChanges) {\n                throw new Error('Workspace edit is not configured for versioned document changes.');\n            }\n            var textDocument = key;\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    changes: Object.create(null)\n                };\n            }\n            if (!this._workspaceEdit.changes) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    return WorkspaceChange;\n}());\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n})(MarkedString || (MarkedString = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n    ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrance.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containg the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics) {\n        return { diagnostics: diagnostics };\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data))\n            result.data = data;\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * A document link is a range in a text document that links to an internal or external resource, like another\n * text document or a web site.\n */\nvar DocumentLink = /** @class */ (function () {\n    function DocumentLink() {\n    }\n    return DocumentLink;\n}());\nexport { DocumentLink };\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target) {\n        return { range: range, target: target };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return 0;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Ovelapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nexport var TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = null;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = null;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === null) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n            _this._resetSchema(model.uri);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n            _this._resetSchema(event.model.uri);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                monaco.editor.getModels().forEach(onModelRemoved);\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._resetSchema = function (resource) {\n        this._worker().then(function (worker) {\n            worker.resetSchema(resource.toString());\n        });\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                var model = monaco.editor.getModel(resource);\n                if (model.getModeId() === languageId) {\n                    monaco.editor.setModelMarkers(model, languageId, markers);\n                }\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nfunction toCompletionItem(entry) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: entry.documentation,\n        detail: entry.detail,\n        kind: toCompletionItemKind(entry.kind),\n        textEdit: toTextEdit(entry.textEdit),\n        data: entry.data\n    };\n}\nfunction fromMarkdownString(entry) {\n    return {\n        kind: (typeof entry === 'string' ? ls.MarkupKind.PlainText : ls.MarkupKind.Markdown),\n        value: (typeof entry === 'string' ? entry : entry.value)\n    };\n}\nfunction fromCompletionItem(entry) {\n    var item = {\n        label: entry.label,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: fromMarkdownString(entry.documentation),\n        detail: entry.detail,\n        kind: fromCompletionItemKind(entry.kind),\n        data: entry.data\n    };\n    if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n        item.insertText = entry.insertText.value;\n        item.insertTextFormat = ls.InsertTextFormat.Snippet;\n    }\n    else {\n        item.insertText = entry.insertText;\n    }\n    if (entry.range) {\n        item.textEdit = ls.TextEdit.replace(fromRange(entry.range), item.insertText);\n    }\n    return item;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return [' ', ':'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- hover ------\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        }));\n    };\n    return HoverAdapter;\n}());\nexport { HoverAdapter };\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                location: toLocation(item.location)\n            }); });\n        }));\n    };\n    return DocumentSymbolAdapter;\n}());\nexport { DocumentSymbolAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\nvar DocumentColorAdapter = /** @class */ (function () {\n    function DocumentColorAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\n            if (!infos) {\n                return;\n            }\n            return infos.map(function (item) { return ({\n                color: item.color,\n                range: toRange(item.range)\n            }); });\n        }));\n    };\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\n            if (!presentations) {\n                return;\n            }\n            return presentations.map(function (presentation) {\n                var item = {\n                    label: presentation.label,\n                };\n                if (presentation.textEdit) {\n                    item.textEdit = toTextEdit(presentation.textEdit);\n                }\n                if (presentation.additionalTextEdits) {\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n                }\n                return item;\n            });\n        }));\n    };\n    return DocumentColorAdapter;\n}());\nexport { DocumentColorAdapter };\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    if (promise.cancel) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n    }\n    return promise;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var pos = 0, len = text.length, value = '', tokenOffset = 0, token = 16 /* Unknown */, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                ch = text.charCodeAt(pos++);\n                switch (ch) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch_1 = scanHexDigits(4, true);\n                        if (ch_1 >= 0) {\n                            result += String.fromCharCode(ch_1);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var commentClosed = false;\n                    while (pos < len) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && (pos + 1 < len) && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenError: function () { return scanError; }\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n//# sourceMappingURL=scanner.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format.js';\nimport * as edit from './impl/edit.js';\nimport * as scanner from './impl/scanner.js';\nimport * as parser from './impl/parser.js';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport var createScanner = scanner.createScanner;\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport var getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport var parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport var parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport var findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport var getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport var visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport var stripComments = parser.stripComments;\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\nexport function applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = edit.applyEdit(text, edits[i]);\n    }\n    return text;\n}\n//# sourceMappingURL=main.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as json from './_deps/jsonc-parser/main.js';\nexport function createTokenizationSupport(supportComments) {\n    return {\n        getInitialState: function () { return new JSONState(null, null, false); },\n        tokenize: function (line, state, offsetDelta, stopAtOffset) { return tokenize(supportComments, line, state, offsetDelta, stopAtOffset); }\n    };\n}\nexport var TOKEN_DELIM_OBJECT = 'delimiter.bracket.json';\nexport var TOKEN_DELIM_ARRAY = 'delimiter.array.json';\nexport var TOKEN_DELIM_COLON = 'delimiter.colon.json';\nexport var TOKEN_DELIM_COMMA = 'delimiter.comma.json';\nexport var TOKEN_VALUE_BOOLEAN = 'keyword.json';\nexport var TOKEN_VALUE_NULL = 'keyword.json';\nexport var TOKEN_VALUE_STRING = 'string.value.json';\nexport var TOKEN_VALUE_NUMBER = 'number.json';\nexport var TOKEN_PROPERTY_NAME = 'string.key.json';\nexport var TOKEN_COMMENT_BLOCK = 'comment.block.json';\nexport var TOKEN_COMMENT_LINE = 'comment.line.json';\nvar JSONState = /** @class */ (function () {\n    function JSONState(state, scanError, lastWasColon) {\n        this._state = state;\n        this.scanError = scanError;\n        this.lastWasColon = lastWasColon;\n    }\n    JSONState.prototype.clone = function () {\n        return new JSONState(this._state, this.scanError, this.lastWasColon);\n    };\n    JSONState.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        }\n        if (!other || !(other instanceof JSONState)) {\n            return false;\n        }\n        return this.scanError === other.scanError &&\n            this.lastWasColon === other.lastWasColon;\n    };\n    JSONState.prototype.getStateData = function () {\n        return this._state;\n    };\n    JSONState.prototype.setStateData = function (state) {\n        this._state = state;\n    };\n    return JSONState;\n}());\nfunction tokenize(comments, line, state, offsetDelta, stopAtOffset) {\n    if (offsetDelta === void 0) { offsetDelta = 0; }\n    // handle multiline strings and block comments\n    var numberOfInsertedCharacters = 0, adjustOffset = false;\n    switch (state.scanError) {\n        case 2 /* UnexpectedEndOfString */:\n            line = '\"' + line;\n            numberOfInsertedCharacters = 1;\n            break;\n        case 1 /* UnexpectedEndOfComment */:\n            line = '/*' + line;\n            numberOfInsertedCharacters = 2;\n            break;\n    }\n    var scanner = json.createScanner(line), kind, ret, lastWasColon = state.lastWasColon;\n    ret = {\n        tokens: [],\n        endState: state.clone()\n    };\n    while (true) {\n        var offset = offsetDelta + scanner.getPosition(), type = '';\n        kind = scanner.scan();\n        if (kind === 17 /* EOF */) {\n            break;\n        }\n        // Check that the scanner has advanced\n        if (offset === offsetDelta + scanner.getPosition()) {\n            throw new Error('Scanner did not advance, next 3 characters are: ' + line.substr(scanner.getPosition(), 3));\n        }\n        // In case we inserted /* or \" character, we need to\n        // adjust the offset of all tokens (except the first)\n        if (adjustOffset) {\n            offset -= numberOfInsertedCharacters;\n        }\n        adjustOffset = numberOfInsertedCharacters > 0;\n        // brackets and type\n        switch (kind) {\n            case 1 /* OpenBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 2 /* CloseBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 3 /* OpenBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 4 /* CloseBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 6 /* ColonToken */:\n                type = TOKEN_DELIM_COLON;\n                lastWasColon = true;\n                break;\n            case 5 /* CommaToken */:\n                type = TOKEN_DELIM_COMMA;\n                lastWasColon = false;\n                break;\n            case 8 /* TrueKeyword */:\n            case 9 /* FalseKeyword */:\n                type = TOKEN_VALUE_BOOLEAN;\n                lastWasColon = false;\n                break;\n            case 7 /* NullKeyword */:\n                type = TOKEN_VALUE_NULL;\n                lastWasColon = false;\n                break;\n            case 10 /* StringLiteral */:\n                type = lastWasColon ? TOKEN_VALUE_STRING : TOKEN_PROPERTY_NAME;\n                lastWasColon = false;\n                break;\n            case 11 /* NumericLiteral */:\n                type = TOKEN_VALUE_NUMBER;\n                lastWasColon = false;\n                break;\n        }\n        // comments, iff enabled\n        if (comments) {\n            switch (kind) {\n                case 12 /* LineCommentTrivia */:\n                    type = TOKEN_COMMENT_LINE;\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    type = TOKEN_COMMENT_BLOCK;\n                    break;\n            }\n        }\n        ret.endState = new JSONState(state.getStateData(), scanner.getTokenError(), lastWasColon);\n        ret.tokens.push({\n            startIndex: offset,\n            scopes: type\n        });\n    }\n    return ret;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nimport { createTokenizationSupport } from './tokenization.js';\nexport function setupMode(defaults) {\n    var disposables = [];\n    var client = new WorkerManager(defaults);\n    disposables.push(client);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    disposables.push(monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker)));\n    disposables.push(monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker)));\n    disposables.push(monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker)));\n    disposables.push(new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults));\n    disposables.push(monaco.languages.setTokensProvider(languageId, createTokenizationSupport(true)));\n    disposables.push(monaco.languages.setLanguageConfiguration(languageId, richEditConfiguration));\n    disposables.push(monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker)));\n}\nvar richEditConfiguration = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\[\\{\\]\\}\\:\\\"\\,\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string'] },\n        { open: '[', close: ']', notIn: ['string'] },\n        { open: '\"', close: '\"', notIn: ['string'] }\n    ]\n};\n"],"sourceRoot":""}